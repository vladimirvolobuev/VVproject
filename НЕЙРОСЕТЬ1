from numpy import exp, array, random, dot


def convert(lst):
    return (lst[0].split())


p1 = ["небо очень красивое"]
p2 = ["посмотри на небо"]
p3 = ["черное звездное небо"]
p4 = ["небо затянуто тучами"]
p5 = ["люблю зеленый цвет"]
p6 = ["этот джип зеленый"]
p7 = ["зеленый лес красив"]
p8 = ["горит зеленый свет"]
p9 = ["музыка играет громко"]
p10 = ["какая красивая музыка"]
p11 = ["музыка помогает расслабиться"]
p12 = ["это немецкая музыка"]
p13 = ["ёё телефон дорогой"]
p14 = ["кажется телефон звонит"]
p15 = ["запиши мой телефон"]
p16 = ["твой телефон потерялся"]

s1 = convert(p1)
a1, a2, a3 = s1[0], s1[1], s1[2]
s2 = convert(p2)
b1, b2, b3 = s2[0], s2[1], s2[2]
s3 = convert(p3)
c1, c2, c3 = s3[0], s3[1], s3[2]
s4 = convert(p4)
d1, d2, d3 = s4[0], s4[1], s4[2]
s5 = convert(p5)
e1, e2, e3 = s5[0], s5[1], s5[2]
s6 = convert(p6)
f1, f2, f3 = s6[0], s6[1], s6[2]
s7 = convert(p7)
g1, g2, g3 = s7[0], s7[1], s7[2]
s8 = convert(p8)
h1, h2, h3 = s8[0], s8[1], s8[2]
s9 = convert(p9)
i1, i2, i3 = s9[0], s9[1], s9[2]
s10 = convert(p10)
j1, j2, j3 = s10[0], s10[1], s10[2]
s11 = convert(p11)
k1, k2, k3 = s11[0], s11[1], s11[2]
s12 = convert(p12)
l1, l2, l3 = s12[0], s12[1], s12[2]
s13 = convert(p13)
m1, m2, m3 = s13[0], s13[1], s13[2]
s14 = convert(p14)
n1, n2, n3 = s14[0], s14[1], s14[2]
s15 = convert(p15)
o1, o2, o3 = s15[0], s15[1], s15[2]
s16 = convert(p16)
p1, p2, p3 = s16[0], s16[1], s16[2]

with open("wordlist.txt", "rb") as f:
    wordlist = {}
    for line in f.readlines():
        wordlist.update({line.decode('utf-8').strip(): random.random()})
training_set_inputs = array([[wordlist[a1], wordlist[a2], wordlist[a3]],
                             [wordlist[b1], wordlist[b2], wordlist[b3]],
                             [wordlist[c1], wordlist[c2], wordlist[c3]],
                             [wordlist[d1], wordlist[d2], wordlist[d3]],
                             [wordlist[e1], wordlist[e2], wordlist[e3]],
                             [wordlist[f1], wordlist[f2], wordlist[f3]],
                             [wordlist[g1], wordlist[g2], wordlist[g3]],
                             [wordlist[h1], wordlist[h2], wordlist[h3]],
                             [wordlist[i1], wordlist[i2], wordlist[i3]],
                             [wordlist[j1], wordlist[j2], wordlist[j3]],
                             [wordlist[k1], wordlist[k2], wordlist[k3]],
                             [wordlist[l1], wordlist[l2], wordlist[l3]],
                             [wordlist[m1], wordlist[m2], wordlist[m3]],
                             [wordlist[n1], wordlist[n2], wordlist[n3]],
                             [wordlist[o1], wordlist[o2], wordlist[o3]],
                             [wordlist[p1], wordlist[p2], wordlist[p3]]])
training_set_outputs = array([[wordlist[a1],
                               wordlist[b3],
                               wordlist[c3],
                               wordlist[d1],
                               wordlist[e2],
                               wordlist[f3],
                               wordlist[g1],
                               wordlist[h2],
                               wordlist[i1],
                               wordlist[j3],
                               wordlist[k1],
                               wordlist[l3],
                               wordlist[m2],
                               wordlist[n2],
                               wordlist[o3],
                               wordlist[p2]]]).T
p17 = ["мой телефон сломался"]
s17 = convert(p17)
q1, q2, q3 = s17[0], s17[1], s17[2]

random.seed(1)
synaptic_weights = 2 * random.random((3, 1)) - 1
for iteration in range(100000):
    output = 1 / (1 + exp(-(dot(training_set_inputs, synaptic_weights))))
    synaptic_weights += dot(training_set_inputs.T, (training_set_outputs - output) * output * (1 - output))
a = (1 / (1 + exp(-(dot(array([wordlist[q1], wordlist[q2], wordlist[q3]]), synaptic_weights)))))
spisok1 = [q1, q2, q3]
elem1, elem2, elem3 = wordlist[q1], wordlist[q2], wordlist[q3]
spisok2 = [elem1, elem2, elem3]
for elem in spisok1:
    if wordlist[elem] == min(spisok2, key=lambda x:abs(x-a)):
        print(elem)
        print(wordlist[elem])
        print(a)
